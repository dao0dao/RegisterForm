{"version":3,"sources":["components/Button.js","components/FormValidation.js","components/App.js","index.js"],"names":["Button","props","className","disabled","disable","type","onClick","click","FormValidation","noValidate","htmlFor","name","id","value","userValue","onChange","change","userInfo","emailValue","emailInfo","passwordValue","passwordInfo","checked","acceptChecked","acceptInfo","buttonDisabled","App","state","usernick","email","password","accept","corectUsernick","corectEmail","corectPassword","isCorrectForm","validation","upperCase","downCase","specials","digits","handleClick","e","preventDefault","setState","alert","handleChange","target","setTimeout","checkNick","test","length","checkEmail","checkPassword","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4da8eb8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = props => {\r\n    return (\r\n        <button className='buttonSubmit'\r\n            disabled={props.disable}\r\n            type=\"submit\"\r\n            onClick={props.click}\r\n        >\r\n            Zarejestruj się\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button","import React from 'react';\r\nimport Button from './Button'\r\n\r\nconst FormValidation = props => {\r\n    return (\r\n        <>\r\n            <h2>Rejestracja</h2>\r\n            <form noValidate>\r\n                <label className='user' htmlFor=\"user\">\r\n                    <p className='text'>Wpisz swój nick:</p>\r\n                    <input\r\n                        type=\"text\" name=\"usernick\" id=\"user\"\r\n                        value={props.userValue}\r\n                        onChange={props.change}\r\n                    />\r\n                    <div className='info'>\r\n                        {props.userInfo && <p>Nick nie może zawierać spacji!</p>}\r\n                    </div>\r\n                </label>\r\n                <label className='email' htmlFor=\"email\">\r\n                    <p className='text'>Wpisz swój e-mail:</p>\r\n                    <input\r\n                        type=\"email\" name=\"email\" id=\"email\"\r\n                        value={props.emailValue}\r\n                        onChange={props.change}\r\n                    />\r\n                    <div className='info'>\r\n                        {props.emailInfo && <p>Wprowadź prawidłowy email!</p>}\r\n                    </div>\r\n                </label>\r\n                <label className='password' htmlFor=\"password\">\r\n                    <p className='text'>Wpisz swoje hasło:</p>\r\n                    <input\r\n                        type=\"password\" name=\"password\" id=\"password\"\r\n                        value={props.passwordValue}\r\n                        onChange={props.change}\r\n                    />\r\n                    <div className='info infoPassword'>\r\n                        {props.passwordInfo && <div>\r\n\r\n                            <p>Hasło musi składać z:</p>\r\n                            <ul>\r\n                                <li>Co najmniej z 8 znaków.</li>\r\n                                <li>Wielkich i małych liter.</li>\r\n                                <li>Liczb.</li>\r\n                                <li>Znaku specjalnego.</li>\r\n                            </ul>\r\n                        </div>}\r\n                    </div>\r\n                </label>\r\n                <label className='accept' htmlFor=\"accept\">\r\n                    <input type=\"checkbox\" name=\"accept\" id=\"accept\"\r\n                        checked={props.acceptChecked}\r\n                        onChange={props.change}\r\n                    />\r\n                    <p className='text'>Zgadzam się z regulaminem</p>\r\n                    <div className='info'>\r\n                        {props.acceptInfo && <p>Zaakceptuj regulamin!</p>}\r\n                    </div>\r\n                </label>\r\n                <Button\r\n                    disable={props.buttonDisabled}\r\n                    click={props.click}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormValidation","import React from 'react';\nimport './App.css';\nimport FormValidation from './FormValidation';\n\nclass App extends React.Component {\n\n  state = {\n    usernick: '',\n    email: '',\n    password: '',\n    accept: false,\n    corectUsernick: false,\n    corectEmail: false,\n    corectPassword: false,\n    isCorrectForm: false\n  };\n\n  validation = {\n    usernick: /\\s/,\n    email: /[a-z]+[-_]*[.]*[0-9]*@[a-z]+[0-9]*[.][a-z]{2,3}$/i,\n    upperCase: /[A-Z]+/,\n    downCase: /[a-z]+/,\n    specials: /[!@#$%^&*()-_,.]+/,\n    digits: /[0-9]+/\n  }\n\n  handleClick = e => {\n    e.preventDefault();\n    this.setState({\n      usernick: '',\n      email: '',\n      password: '',\n      accept: false,\n      corectUsernick: false,\n      corectEmail: false,\n      corectPassword: false,\n      isCorrectForm: false\n    });\n    alert(`Formularz został wysłany, dziękujemy za rejestracje.`)\n  };\n\n  handleChange = e => {\n    const name = e.target.name;\n    const type = e.target.type;\n    if (name === 'usernick' || name === 'email' || name === 'password') {\n      const value = e.target.value\n      this.setState({\n        [name]: value\n      });\n    } else if (type === 'checkbox') {\n      const checked = e.target.checked\n      this.setState({\n        [name]: checked\n      });\n    };\n    setTimeout(() => {\n      const { usernick, email, password } = this.state;\n      const { validation } = this;\n      const checkNick = (!validation.usernick.test(usernick) && usernick.length > 0);\n      const checkEmail = validation.email.test(email);\n      const checkPassword = (validation.upperCase.test(password) && validation.downCase.test(password) && validation.specials.test(password) && validation.digits.test(password) && password.length >= 8);\n      if (checkNick && checkEmail && checkPassword && this.state.accept) {\n        this.setState({\n          isCorrectForm: true\n        });\n      } else {\n        this.setState({\n          isCorrectForm: false\n        });\n      };\n      this.setState({\n        corectUsernick: checkNick,\n        corectEmail: checkEmail,\n        corectPassword: checkPassword\n      });\n    }, 0)\n  };\n\n  render() {\n    const { usernick, corectUsernick, email, corectEmail, password, corectPassword, accept, isCorrectForm } = this.state\n    const { handleChange, handleClick } = this\n    return (\n      <div className='App'>\n        <FormValidation\n          change={handleChange}\n\n          userValue={usernick}\n          userInfo={!corectUsernick}\n\n          emailValue={email}\n          emailInfo={!corectEmail}\n\n          passwordValue={password}\n          passwordInfo={!corectPassword}\n\n          acceptChecked={accept}\n          acceptInfo={!accept}\n\n          buttonDisabled={!isCorrectForm}\n          click={handleClick}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);"],"sourceRoot":""}